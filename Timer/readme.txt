C++11, 80行代码实现高效灵活的定时器
1、定时器有哪些实现方式
	组织方式：时间序（红黑树nginx、最小堆libevent/libev/go）；执行序（时间轮netty/skynet/kafka/内核）
	应用方式：单线程（多用时间序）；多线程（多用执行序）

2、定时器与其它模块的关系
	特点：基于事件驱动业务的开展
		与网络模块协同处理
		除了协同网路处理、还能复用系统调用

3、定时器接口设计
	基础接口：
		最近触发的定时任务离当前还要多久
		获取当前时间的接口（steady_clock(系统启动到当前的时间/用来计算程序运行时间)	
							system_clock(时间戳/可修改)	
							high_resolution_clock(高精度版本的steady_clock)）
		添加定时器、删除定时器、检查定时器（过期检查）

4、C++STL容器选择
	红黑树实现：选择STL中：map、set、multimap、multiset

5、容器中红黑树实现

6、代码实现